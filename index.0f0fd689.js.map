{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : null;\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.size = 4;\n        this.score = 0;\n        this.status = \"idle\";\n        this.initialState = initialState;\n        this.board = initialState ? this.copyState(initialState) : this.generateEmptyBoard();\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"generateEmptyBoard\",\n            value: function generateEmptyBoard() {\n                var _this = this;\n                return Array(this.size).fill(null).map(function() {\n                    return Array(_this.size).fill(0);\n                });\n            }\n        },\n        {\n            key: \"getState\",\n            value: function getState() {\n                return this.board;\n            }\n        },\n        {\n            key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            key: \"getStatus\",\n            value: function getStatus() {\n                return this.status;\n            }\n        },\n        {\n            key: \"initializeGame\",\n            value: function initializeGame() {\n                this.addRandomTile();\n                this.addRandomTile();\n            }\n        },\n        {\n            key: \"addRandomTile\",\n            value: function addRandomTile() {\n                var emptyCells = [];\n                for(var r = 0; r < this.size; r++){\n                    for(var c = 0; c < this.size; c++)if (this.board[r][c] === 0) emptyCells.push([\n                        r,\n                        c\n                    ]);\n                }\n                if (emptyCells.length > 0) {\n                    var _emptyCells_Math_floor = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(emptyCells[Math.floor(Math.random() * emptyCells.length)], 2), row = _emptyCells_Math_floor[0], col = _emptyCells_Math_floor[1];\n                    this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n                }\n            }\n        },\n        {\n            key: \"slide\",\n            value: function slide(row) {\n                var newRow = row.filter(function(val) {\n                    return val;\n                });\n                while(newRow.length < this.size)newRow.push(0);\n                return newRow;\n            }\n        },\n        {\n            key: \"combine\",\n            value: function combine(row) {\n                for(var i = 0; i < row.length - 1; i++)if (row[i] === row[i + 1] && row[i] !== 0) {\n                    row[i] *= 2;\n                    row[i + 1] = 0;\n                    this.score += row[i];\n                }\n                return row;\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                for(var r = 0; r < this.size; r++){\n                    var newRow = this.slide(this.board[r]);\n                    newRow = this.combine(newRow);\n                    newRow = this.slide(newRow);\n                    if (this.board[r].toString() !== newRow.toString()) moved = true;\n                    this.board[r] = newRow;\n                }\n                if (moved) this.postMove();\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                for(var r = 0; r < this.size; r++){\n                    var originalRow = (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(this.board[r]);\n                    var newRow = this.slide(this.board[r].slice().reverse());\n                    newRow = this.combine(newRow);\n                    newRow = this.slide(newRow).reverse();\n                    if (originalRow.toString() !== newRow.toString()) moved = true;\n                    this.board[r] = newRow;\n                }\n                if (moved) this.postMove();\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this, _loop = function(c) {\n                    var col = _this.board.map(function(row) {\n                        return row[c];\n                    });\n                    var newCol = _this.slide(col);\n                    newCol = _this.combine(newCol);\n                    newCol = _this.slide(newCol);\n                    if (col.toString() !== newCol.toString()) moved = true;\n                    for(var r = 0; r < _this.size; r++)_this.board[r][c] = newCol[r];\n                };\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                for(var c = 0; c < this.size; c++)_loop(c);\n                if (moved) this.postMove();\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this, _loop = function(c) {\n                    var col = _this.board.map(function(row) {\n                        return row[c];\n                    });\n                    var newCol = _this.slide(col.slice().reverse());\n                    newCol = _this.combine(newCol);\n                    newCol = _this.slide(newCol).reverse();\n                    if (col.toString() !== newCol.toString()) moved = true;\n                    for(var r = 0; r < _this.size; r++)_this.board[r][c] = newCol[r];\n                };\n                if (this.status !== \"playing\") return;\n                var moved = false;\n                for(var c = 0; c < this.size; c++)_loop(c);\n                if (moved) this.postMove();\n            }\n        },\n        {\n            key: \"postMove\",\n            value: function postMove() {\n                this.addRandomTile();\n                this.checkGameStatus();\n            }\n        },\n        {\n            key: \"checkGameStatus\",\n            value: function checkGameStatus() {\n                for(var r = 0; r < this.size; r++){\n                    for(var c = 0; c < this.size; c++)if (this.board[r][c] === 2048) {\n                        this.status = \"win\";\n                        return;\n                    }\n                }\n                for(var r1 = 0; r1 < this.size; r1++)for(var c1 = 0; c1 < this.size; c1++){\n                    if (this.board[r1][c1] === 0) return;\n                    if (c1 !== this.size - 1 && this.board[r1][c1] === this.board[r1][c1 + 1]) return;\n                    if (r1 !== this.size - 1 && this.board[r1][c1] === this.board[r1 + 1][c1]) return;\n                }\n                this.status = \"lose\";\n            }\n        },\n        {\n            key: \"start\",\n            value: function start() {\n                if (this.status === \"idle\") {\n                    this.initializeGame();\n                    this.status = \"playing\";\n                }\n            }\n        },\n        {\n            key: \"restart\",\n            value: function restart() {\n                this.board = this.initialState ? this.copyState(this.initialState) : this.generateEmptyBoard();\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        },\n        {\n            key: \"copyState\",\n            value: function copyState(state) {\n                return state.map(function(row) {\n                    return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n                });\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var startButton = document.querySelector(\".button.start\");\n    var gameField = document.querySelector(\".game-field\");\n    var scoreElement = document.querySelector(\".game-score\");\n    var startMessage = document.querySelector(\".message-start\");\n    var winMessage = document.querySelector(\".message-win\");\n    var loseMessage = document.querySelector(\".message-lose\");\n    var updateUI = function() {\n        scoreElement.textContent = $197cd56b15c33885$var$game.getScore();\n        var state = $197cd56b15c33885$var$game.getState();\n        gameField.querySelectorAll(\".field-row\").forEach(function(row, rIndex) {\n            row.querySelectorAll(\".field-cell\").forEach(function(cell, cIndex) {\n                cell.className = \"field-cell\";\n                if (state[rIndex][cIndex] !== 0) {\n                    cell.classList.add(\"field-cell--\".concat(state[rIndex][cIndex]));\n                    cell.textContent = state[rIndex][cIndex];\n                } else cell.textContent = \"\";\n            });\n        });\n        if ($197cd56b15c33885$var$game.getStatus() === \"win\") winMessage.classList.remove(\"hidden\");\n        else if ($197cd56b15c33885$var$game.getStatus() === \"lose\") loseMessage.classList.remove(\"hidden\");\n        else {\n            winMessage.classList.add(\"hidden\");\n            loseMessage.classList.add(\"hidden\");\n        }\n    };\n    var startGame = function() {\n        $197cd56b15c33885$var$game.start();\n        startMessage.classList.add(\"hidden\");\n        startButton.textContent = \"Restart\";\n        startButton.classList.remove(\"start\");\n        startButton.classList.add(\"restart\");\n        updateUI();\n    };\n    var restartGame = function() {\n        $197cd56b15c33885$var$game.restart();\n        startMessage.classList.remove(\"hidden\");\n        startButton.textContent = \"Start\";\n        startButton.classList.remove(\"restart\");\n        startButton.classList.add(\"start\");\n        updateUI();\n    };\n    startButton.addEventListener(\"click\", function() {\n        var buttonText = startButton.textContent;\n        if (buttonText === \"Start\") startGame();\n        else if (buttonText === \"Restart\") restartGame();\n    });\n    document.addEventListener(\"keydown\", function(e) {\n        if ($197cd56b15c33885$var$game.getStatus() === \"playing\") {\n            switch(e.key){\n                case \"ArrowLeft\":\n                    $197cd56b15c33885$var$game.moveLeft();\n                    break;\n                case \"ArrowRight\":\n                    $197cd56b15c33885$var$game.moveRight();\n                    break;\n                case \"ArrowUp\":\n                    $197cd56b15c33885$var$game.moveUp();\n                    break;\n                case \"ArrowDown\":\n                    $197cd56b15c33885$var$game.moveDown();\n                    break;\n            }\n            updateUI();\n        }\n    });\n    updateUI();\n});\n\n})();\n//# sourceMappingURL=index.0f0fd689.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const startButton = document.querySelector('.button.start');\n  const gameField = document.querySelector('.game-field');\n  const scoreElement = document.querySelector('.game-score');\n  const startMessage = document.querySelector('.message-start');\n  const winMessage = document.querySelector('.message-win');\n  const loseMessage = document.querySelector('.message-lose');\n\n  const updateUI = () => {\n    scoreElement.textContent = game.getScore();\n\n    const state = game.getState();\n\n    gameField.querySelectorAll('.field-row').forEach((row, rIndex) => {\n      row.querySelectorAll('.field-cell').forEach((cell, cIndex) => {\n        cell.className = 'field-cell';\n\n        if (state[rIndex][cIndex] !== 0) {\n          cell.classList.add(`field-cell--${state[rIndex][cIndex]}`);\n          cell.textContent = state[rIndex][cIndex];\n        } else {\n          cell.textContent = '';\n        }\n      });\n    });\n\n    if (game.getStatus() === 'win') {\n      winMessage.classList.remove('hidden');\n    } else if (game.getStatus() === 'lose') {\n      loseMessage.classList.remove('hidden');\n    } else {\n      winMessage.classList.add('hidden');\n      loseMessage.classList.add('hidden');\n    }\n  };\n\n  const startGame = () => {\n    game.start();\n    startMessage.classList.add('hidden');\n    startButton.textContent = 'Restart';\n    startButton.classList.remove('start');\n    startButton.classList.add('restart');\n    updateUI();\n  };\n\n  const restartGame = () => {\n    game.restart();\n    startMessage.classList.remove('hidden');\n    startButton.textContent = 'Start';\n    startButton.classList.remove('restart');\n    startButton.classList.add('start');\n    updateUI();\n  };\n\n  startButton.addEventListener('click', () => {\n    const buttonText = startButton.textContent;\n\n    if (buttonText === 'Start') {\n      startGame();\n    } else if (buttonText === 'Restart') {\n      restartGame();\n    }\n  });\n\n  document.addEventListener('keydown', (e) => {\n    if (game.getStatus() === 'playing') {\n      switch (e.key) {\n        case 'ArrowLeft':\n          game.moveLeft();\n          break;\n        case 'ArrowRight':\n          game.moveRight();\n          break;\n        case 'ArrowUp':\n          game.moveUp();\n          break;\n        case 'ArrowDown':\n          game.moveDown();\n          break;\n      }\n      updateUI();\n    }\n  });\n\n  updateUI();\n});\n","'use strict';\n\nclass Game {\n  constructor(initialState = null) {\n    this.size = 4;\n    this.score = 0;\n    this.status = 'idle';\n    this.initialState = initialState;\n\n    this.board = initialState\n      ? this.copyState(initialState)\n      : this.generateEmptyBoard();\n  }\n\n  generateEmptyBoard() {\n    return Array(this.size)\n      .fill(null)\n      .map(() => Array(this.size).fill(0));\n  }\n\n  getState() {\n    return this.board;\n  }\n\n  getScore() {\n    return this.score;\n  }\n\n  getStatus() {\n    return this.status;\n  }\n\n  initializeGame() {\n    this.addRandomTile();\n    this.addRandomTile();\n  }\n\n  addRandomTile() {\n    const emptyCells = [];\n\n    for (let r = 0; r < this.size; r++) {\n      for (let c = 0; c < this.size; c++) {\n        if (this.board[r][c] === 0) {\n          emptyCells.push([r, c]);\n        }\n      }\n    }\n\n    if (emptyCells.length > 0) {\n      const [row, col] =\n        emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n      this.board[row][col] = Math.random() < 0.9 ? 2 : 4;\n    }\n  }\n\n  slide(row) {\n    const newRow = row.filter((val) => val);\n\n    while (newRow.length < this.size) {\n      newRow.push(0);\n    }\n\n    return newRow;\n  }\n\n  combine(row) {\n    for (let i = 0; i < row.length - 1; i++) {\n      if (row[i] === row[i + 1] && row[i] !== 0) {\n        row[i] *= 2;\n        row[i + 1] = 0;\n        this.score += row[i];\n      }\n    }\n\n    return row;\n  }\n\n  moveLeft() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (let r = 0; r < this.size; r++) {\n      let newRow = this.slide(this.board[r]);\n\n      newRow = this.combine(newRow);\n      newRow = this.slide(newRow);\n\n      if (this.board[r].toString() !== newRow.toString()) {\n        moved = true;\n      }\n      this.board[r] = newRow;\n    }\n\n    if (moved) {\n      this.postMove();\n    }\n  }\n\n  moveRight() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (let r = 0; r < this.size; r++) {\n      const originalRow = [...this.board[r]];\n      let newRow = this.slide(this.board[r].slice().reverse());\n\n      newRow = this.combine(newRow);\n      newRow = this.slide(newRow).reverse();\n\n      if (originalRow.toString() !== newRow.toString()) {\n        moved = true;\n      }\n\n      this.board[r] = newRow;\n    }\n\n    if (moved) {\n      this.postMove();\n    }\n  }\n\n  moveUp() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (let c = 0; c < this.size; c++) {\n      const col = this.board.map((row) => row[c]);\n      let newCol = this.slide(col);\n\n      newCol = this.combine(newCol);\n      newCol = this.slide(newCol);\n\n      if (col.toString() !== newCol.toString()) {\n        moved = true;\n      }\n\n      for (let r = 0; r < this.size; r++) {\n        this.board[r][c] = newCol[r];\n      }\n    }\n\n    if (moved) {\n      this.postMove();\n    }\n  }\n\n  moveDown() {\n    if (this.status !== 'playing') {\n      return;\n    }\n\n    let moved = false;\n\n    for (let c = 0; c < this.size; c++) {\n      const col = this.board.map((row) => row[c]);\n      let newCol = this.slide(col.slice().reverse());\n\n      newCol = this.combine(newCol);\n      newCol = this.slide(newCol).reverse();\n\n      if (col.toString() !== newCol.toString()) {\n        moved = true;\n      }\n\n      for (let r = 0; r < this.size; r++) {\n        this.board[r][c] = newCol[r];\n      }\n    }\n\n    if (moved) {\n      this.postMove();\n    }\n  }\n\n  postMove() {\n    this.addRandomTile();\n    this.checkGameStatus();\n  }\n\n  checkGameStatus() {\n    for (let r = 0; r < this.size; r++) {\n      for (let c = 0; c < this.size; c++) {\n        if (this.board[r][c] === 2048) {\n          this.status = 'win';\n\n          return;\n        }\n      }\n    }\n\n    for (let r = 0; r < this.size; r++) {\n      for (let c = 0; c < this.size; c++) {\n        if (this.board[r][c] === 0) {\n          return;\n        }\n\n        if (c !== this.size - 1 && this.board[r][c] === this.board[r][c + 1]) {\n          return;\n        }\n\n        if (r !== this.size - 1 && this.board[r][c] === this.board[r + 1][c]) {\n          return;\n        }\n      }\n    }\n    this.status = 'lose';\n  }\n\n  start() {\n    if (this.status === 'idle') {\n      this.initializeGame();\n      this.status = 'playing';\n    }\n  }\n\n  restart() {\n    this.board = this.initialState\n      ? this.copyState(this.initialState)\n      : this.generateEmptyBoard();\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  copyState(state) {\n    return state.map((row) => [...row]);\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$c3b10a83b523f372$export$79e617b1955a2616","arr","len","length","i","arr2","Array","$d4f69c5c6c4654b1$export$a5be06335b3a083c","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","from","test","$227c6742e0ff6f82$export$1b5e630bc3aea29f","isArray","iter","Symbol","iterator","TypeError","$197cd56b15c33885$var$game","protoProps","Game","initialState","arguments","instance","Constructor","size","score","status","board","copyState","generateEmptyBoard","key","value","_this","fill","map","addRandomTile","emptyCells","r","c","push","_emptyCells_Math_floor","Math","floor","random","_s","_e","_i","_arr","_n","_d","next","done","err","row","col","newRow","filter","val","moved","slide","combine","postMove","originalRow","reverse","_loop","newCol","checkGameStatus","r1","c1","initializeGame","state","$4fc75ccb937ab1df$var$_defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","document","addEventListener","startButton","querySelector","gameField","scoreElement","startMessage","winMessage","loseMessage","updateUI","textContent","getScore","getState","querySelectorAll","forEach","rIndex","cell","cIndex","className","classList","add","concat","getStatus","remove","startGame","start","restartGame","restart","buttonText","e","moveLeft","moveRight","moveUp","moveDown"],"version":3,"file":"index.0f0fd689.js.map"}